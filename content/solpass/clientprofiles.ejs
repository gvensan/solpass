<!---
title: Client Profile
description: Client Profiles
layout: dashboard
group: solpass
--->

<div class="p-4 bg-white block sm:flex items-center justify-between border-b border-gray-200 lg:mt-1.5 dark:bg-gray-800 dark:border-gray-700">
  <div class="w-full mb-1">
      <div class="mb-4">
          <nav class="flex mb-5" aria-label="Breadcrumb">
              <ol class="inline-flex items-center space-x-1 text-sm font-medium md:space-x-2">
                <li class="inline-flex items-center">
                  <a href="/" class="inline-flex items-center text-gray-700 hover:text-primary-600 dark:text-gray-300 dark:hover:text-white">
                    <svg class="w-5 h-5 mr-2.5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z"></path></svg>
                    Home
                  </a>
                </li>
                <li>
                  <div class="flex items-center">
                    <svg class="w-6 h-6 text-gray-400" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"></path></svg>
                    <span class="ml-1 text-gray-400 md:ml-2 dark:text-gray-500" aria-current="page">Client Profiles</span>
                  </div>
                </li>
              </ol>
          </nav>
      </div>
      <div class="items-center block sm:flex md:divide-x md:divide-gray-100 dark:divide-gray-700 justify-between">
          <h1 class="text-xl font-semibold text-gray-900 sm:text-2xl dark:text-white">All Client Profiles</h1>        
          <div class="flex items-center p-4 space-x-2 whitespace-nowrap justify-end">
            <div id="tooltip-refresh-clientprofiles" role="tooltip" class="absolute z-10 invisible inline-block px-3 py-2 text-sm font-medium text-white bg-gray-900 rounded-lg shadow-sm opacity-0 tooltip dark:bg-gray-700">
                Refresh Client Profiles
                <div class="tooltip-arrow" data-popper-arrow></div>
            </div>
            <button id="refreshClientProfileButton" data-tooltip-target="tooltip-refresh-clientprofiles" data-tooltip-placement="top" class="text-white bg-primary-700 hover:bg-primary-800 focus:ring-4 focus:ring-primary-300 font-medium rounded-lg text-sm px-3 py-2.5 dark:bg-primary-600 dark:hover:bg-primary-700 focus:outline-none dark:focus:ring-primary-800" type="button">
              <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                <path style="fill:none;stroke-width:3;stroke-linecap:round;stroke-linejoin:round;stroke:#fff;stroke-opacity:1;stroke-miterlimit:4;" d="M 17.653125 7.65 C 15.923437 5.404687 13.03125 4.396875 10.279687 5.08125 C 7.532812 5.760937 5.446875 8.00625 4.96875 10.8 M 18 3.998437 L 18 8.001563 L 14.001563 8.001563 M 6.346875 16.35 C 8.076562 18.595312 10.96875 19.603125 13.720313 18.923437 C 16.467187 18.239062 18.553125 15.99375 19.03125 13.2 M 6 20.001562 L 6 15.998437 L 9.998437 15.998437 " transform="matrix(0.833333,0,0,0.833333,0,0)"/>
              </svg>
            </button>   
          </div>        
      </div>
      <div class="relative flex">
        <input type="text" name="chosenbroker" id="chosenbroker" class="peer border-2 border-muted-medium py-4 px-4 rounded-xl placeholder:text-default focus:border-primary focus:ring-1 focus:ring-primary outline-none w-full" placeholder="Choose MessageVPN" required="" onkeypress="return false;"/>&nbsp;

        <button id="open-choose-broker-modal" data-modal-target="choose-broker-modal" data-modal-toggle="choose-broker-modal" class="block text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800" type="button">
          <svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6 text-gray-500 transition duration-75 group-hover:text-gray-900 dark:text-gray-400 dark:group-hover:text-white" fill="currentColor" viewBox="0 0 20 20">
            <g id="surface1">
              <path style=" stroke:none;fill-rule:nonzero;fill:#ffffff;fill-opacity:1;" d="M 20 10 C 20 15.523438 15.523438 20 10 20 C 4.476562 20 0 15.523438 0 10 C 0 4.476562 4.476562 0 10 0 C 15.523438 0 20 4.476562 20 10 Z M 20 10 "/>
              <path style=" stroke:none;fill-rule:nonzero;fill:#6b7280;fill-opacity:1;" d="M 17.34375 8.5 C 17.34375 8.4375 17.339844 8.375 17.324219 8.3125 C 17.300781 8.195312 17.253906 8.082031 17.1875 7.980469 C 17.152344 7.929688 17.113281 7.882812 17.070312 7.839844 C 16.90625 7.667969 16.667969 7.5625 16.40625 7.5625 L 14.316406 7.5625 L 14.316406 6.214844 C 14.371094 6.199219 14.425781 6.179688 14.476562 6.152344 C 14.683594 6.054688 14.851562 5.890625 14.957031 5.691406 C 15.011719 5.589844 15.050781 5.484375 15.070312 5.367188 C 15.082031 5.308594 15.082031 5.25 15.082031 5.1875 C 15.082031 4.816406 14.894531 4.484375 14.609375 4.292969 C 14.4375 4.179688 14.226562 4.109375 14.003906 4.109375 C 13.855469 4.109375 13.714844 4.140625 13.585938 4.195312 C 13.195312 4.359375 12.929688 4.746094 12.929688 5.191406 C 12.929688 5.3125 12.945312 5.429688 12.984375 5.539062 C 13.023438 5.648438 13.078125 5.746094 13.148438 5.839844 C 13.25 5.972656 13.382812 6.082031 13.535156 6.160156 C 13.585938 6.183594 13.640625 6.207031 13.695312 6.222656 L 13.695312 7.570312 L 10.3125 7.570312 L 10.3125 4.46875 C 10.425781 4.4375 10.527344 4.386719 10.621094 4.320312 C 10.898438 4.125 11.082031 3.804688 11.082031 3.4375 C 11.082031 2.839844 10.601562 2.359375 10.003906 2.359375 C 9.929688 2.359375 9.855469 2.367188 9.785156 2.378906 C 9.574219 2.425781 9.386719 2.527344 9.238281 2.675781 C 9.042969 2.871094 8.921875 3.140625 8.921875 3.4375 C 8.921875 3.621094 8.964844 3.792969 9.046875 3.945312 C 9.101562 4.042969 9.167969 4.136719 9.25 4.214844 C 9.371094 4.332031 9.523438 4.417969 9.6875 4.46875 L 9.6875 7.570312 L 6.304688 7.570312 L 6.304688 6.222656 C 6.417969 6.1875 6.519531 6.140625 6.613281 6.070312 C 6.707031 6.007812 6.789062 5.929688 6.859375 5.839844 C 6.929688 5.75 6.980469 5.648438 7.019531 5.539062 C 7.058594 5.429688 7.078125 5.3125 7.078125 5.191406 C 7.078125 5.042969 7.046875 4.898438 6.992188 4.773438 C 6.9375 4.640625 6.859375 4.527344 6.761719 4.429688 C 6.664062 4.332031 6.546875 4.25 6.417969 4.195312 C 6.285156 4.140625 6.144531 4.109375 5.996094 4.109375 C 5.851562 4.109375 5.707031 4.140625 5.578125 4.195312 C 5.515625 4.226562 5.453125 4.257812 5.394531 4.296875 C 5.28125 4.375 5.179688 4.476562 5.101562 4.589844 C 4.984375 4.761719 4.917969 4.96875 4.917969 5.191406 C 4.917969 5.253906 4.925781 5.3125 4.933594 5.371094 C 4.953125 5.484375 4.992188 5.59375 5.042969 5.695312 C 5.152344 5.894531 5.320312 6.054688 5.523438 6.15625 C 5.574219 6.179688 5.628906 6.203125 5.6875 6.21875 L 5.6875 7.566406 L 3.597656 7.566406 C 3.285156 7.566406 2.996094 7.726562 2.824219 7.976562 C 2.722656 8.125 2.660156 8.304688 2.660156 8.503906 L 2.660156 11.527344 C 2.660156 11.714844 2.71875 11.894531 2.820312 12.042969 C 2.984375 12.292969 3.269531 12.464844 3.601562 12.464844 L 5.6875 12.464844 L 5.6875 13.785156 C 5.632812 13.804688 5.582031 13.824219 5.527344 13.851562 C 5.320312 13.949219 5.152344 14.109375 5.046875 14.3125 C 4.996094 14.410156 4.957031 14.519531 4.9375 14.636719 C 4.925781 14.695312 4.921875 14.753906 4.921875 14.8125 C 4.921875 15.039062 4.988281 15.246094 5.105469 15.417969 C 5.183594 15.53125 5.285156 15.628906 5.398438 15.707031 C 5.457031 15.746094 5.515625 15.78125 5.582031 15.808594 C 5.710938 15.863281 5.851562 15.894531 6 15.894531 C 6.148438 15.894531 6.292969 15.863281 6.417969 15.808594 C 6.550781 15.753906 6.664062 15.675781 6.765625 15.578125 C 6.859375 15.480469 6.941406 15.363281 6.996094 15.234375 C 7.050781 15.101562 7.082031 14.960938 7.082031 14.8125 C 7.082031 14.691406 7.0625 14.574219 7.023438 14.464844 C 6.984375 14.359375 6.929688 14.257812 6.859375 14.167969 C 6.792969 14.078125 6.710938 13.996094 6.617188 13.933594 C 6.523438 13.871094 6.417969 13.816406 6.308594 13.785156 L 6.308594 12.460938 L 9.691406 12.460938 L 9.691406 15.535156 C 9.523438 15.585938 9.375 15.675781 9.253906 15.792969 C 9.171875 15.871094 9.101562 15.960938 9.050781 16.0625 C 8.96875 16.210938 8.925781 16.382812 8.925781 16.566406 C 8.925781 16.863281 9.046875 17.136719 9.242188 17.332031 C 9.390625 17.476562 9.578125 17.582031 9.789062 17.625 C 9.859375 17.640625 9.933594 17.648438 10.003906 17.648438 C 10.601562 17.648438 11.085938 17.164062 11.085938 16.566406 C 11.085938 16.199219 10.902344 15.878906 10.625 15.6875 C 10.535156 15.621094 10.429688 15.570312 10.316406 15.535156 L 10.316406 12.460938 L 13.699219 12.460938 L 13.699219 13.785156 C 13.644531 13.800781 13.589844 13.820312 13.539062 13.847656 C 13.386719 13.921875 13.25 14.03125 13.148438 14.167969 C 13.082031 14.253906 13.027344 14.359375 12.988281 14.464844 C 12.953125 14.574219 12.929688 14.691406 12.929688 14.8125 C 12.929688 15.261719 13.203125 15.644531 13.589844 15.808594 C 13.71875 15.863281 13.859375 15.894531 14.007812 15.894531 C 14.234375 15.894531 14.4375 15.828125 14.609375 15.710938 C 14.898438 15.515625 15.085938 15.1875 15.085938 14.816406 C 15.085938 14.753906 15.082031 14.695312 15.070312 14.640625 C 15.054688 14.523438 15.015625 14.414062 14.960938 14.3125 C 14.851562 14.113281 14.683594 13.953125 14.480469 13.851562 C 14.429688 13.828125 14.375 13.804688 14.320312 13.789062 L 14.320312 12.464844 L 16.410156 12.464844 C 16.671875 12.464844 16.910156 12.359375 17.082031 12.1875 C 17.167969 12.101562 17.234375 12.003906 17.285156 11.890625 C 17.328125 11.78125 17.351562 11.660156 17.34375 11.535156 Z M 17.34375 8.5 "/>
          </g></svg>
        </button>
      </div>
    </div>
  </div>
  <div class="flex flex-col">
    <div class="overflow-x-auto">
        <div class="inline-block min-w-full align-middle">
            <div class="overflow-hidden shadow">
              <table class="min-w-full divide-y divide-gray-200 table-auto dark:divide-gray-600">
                <thead class="bg-gray-100 dark:bg-gray-700">
                    <tr>
                        <th scope="col" class="p-4 text-xs font-medium text-left text-gray-500 uppercase dark:text-gray-400">
                          Client Profile Name
                        </th>
                        <th scope="col" class="p-4 text-xs font-medium text-left text-gray-500 uppercase dark:text-gray-400">
                          Message VPN
                        </th>
                        <th scope="col" class="p-4 text-xs font-medium text-left text-gray-500 uppercase dark:text-gray-400">
                          Guaranteed Messages
                        </th>
                        <th scope="col" class="p-4 text-xs font-medium text-left text-gray-500 uppercase dark:text-gray-400 text-center">
                          Actions
                        </th>
                    </tr>
                </thead>
                <tbody id="client-profiles-table" class="bg-white divide-y divide-gray-200 dark:bg-gray-800 dark:divide-gray-700">
                </tbody>
            </table>
          </div>
        </div>
    </div>
  </div>
</div>

<!-- Choose Broker Modal -->
<div id="choose-broker-modal" tabindex="-1" class="hidden overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 justify-center items-center w-full md:inset-0 h-[calc(100%-1rem)] max-h-full">
  <div class="relative p-4 w-full max-h-full" style="max-width: 640px;">
      <div class="relative bg-white rounded-lg shadow dark:bg-gray-700">
          <button type="button" id="choose-broker-modal-close" class="absolute top-3 end-2.5 text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center dark:hover:bg-gray-600 dark:hover:text-white" data-modal-hide="choose-broker-modal">
              <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 14">
                  <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"/>
              </svg>
              <span class="sr-only">Close modal</span>
          </button>
          <div class="p-4 md:p-5 text-center">
              <div class="p-2 space-y-2" style="height:auto;overflow: auto;">
                <div id="step1-result" class="mt-2 text-sm hidden"></div>
                <div class="block w-full p-2 bg-white border border-gray-200 rounded-lg shadow">
                  <div class="mb-4 space-y-3" style="max-height:480px;height:auto;overflow: auto;">
                      <div class="relative flex">
                        <ul id="brokerDropdownList" class="py-2 text-gray-700 text-left">

                        </ul>
                      </div>
                  </div>
                </div>
              </div>
              <div class="text-gray-500 text-sm mt-4">Click and select a broker to use for the client profile</div> 
          </div>
      </div>
  </div>
</div>

<!-- Delete Client Profile Drawer -->
<div id="drawer-remove-clientprofile-default" class="fixed top-0 right-0 z-40 w-full h-screen max-w-lg p-4 overflow-y-auto transition-transform translate-x-full bg-white dark:bg-gray-800" tabindex="-1" aria-labelledby="drawer-label" aria-hidden="true">
  <h5 id="drawer-label" class="inline-flex items-center text-sm font-semibold text-gray-500 uppercase dark:text-gray-400">Delete Client Profile</h5>
  <button type="button" id="choose-remove-clientprofile-modal-close" data-drawer-dismiss="drawer-remove-clientprofile-default" aria-controls="drawer-remove-clientprofile-default" class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm p-1.5 absolute top-2.5 right-2.5 inline-flex items-center dark:hover:bg-gray-600 dark:hover:text-white">
      <svg aria-hidden="true" class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path></svg>
      <span class="sr-only">Close menu</span>
  </button>
  <svg class="w-10 h-10 mt-8 mb-4 text-red-600" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg>
  <h3 class="mb-6 text-lg text-gray-500 dark:text-gray-400">Are you sure you want to delete this Client Profile?</h3>
  <div id="remove-clientprofile-data" class="hidden"></div>
  <button id="clientprofileDeleteButton" type="submit" class="text-white bg-red-600 hover:bg-red-800 focus:ring-4 focus:ring-red-300 font-medium rounded-lg text-sm inline-flex items-center px-3 py-2.5 text-center mr-2 dark:focus:ring-red-900">
      Yes, I'm sure
  </button>
  <a href="#" class="text-gray-900 bg-white hover:bg-gray-100 focus:ring-4 focus:ring-primary-300 border border-gray-200 font-medium inline-flex items-center rounded-lg text-sm px-3 py-2.5 text-center dark:bg-gray-800 dark:text-gray-400 dark:border-gray-600 dark:hover:text-white dark:hover:bg-gray-700 dark:focus:ring-gray-700" data-drawer-hide="drawer-remove-clientprofile-default">
      No, cancel
  </a>
</div>

<script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
<link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" rel="stylesheet">

<script>
  const resources = {
    currentBroker: undefined,
    brokers: undefined,
    currentClientProfile: undefined,
    clientProfiles: undefined
  }

  async function fetchBrokers() {
    try {
      const url = new URL(window.location.href);
      const brokers = await fetch(url.origin + `/getbrokers`)
      .then(async (response) => {
        if (response.status !== 200) {
         toastr.error(response.statusText)
        }
        return await response.json();
      });
      
      populateBrokerOptions(brokers);
    } catch (error) {
        console.error('Error fetching broker data:', error);
    }
  }

  async function fetchClientProfiles() {
    try {
      const url = new URL(window.location.href);
      const clientProfiles = await fetch(url.origin + `/getclientprofiles?broker=${resources.currentBroker}`)
      .then(async (response) => {
        if (response.status !== 200) {
          toastr.error(response.statusText)
        }
        return await response.json();
      });
      
      clientProfilesTable.innerHTML = `<td colspan="100%">No client profiles found on the selected broker.</td>`;
      populateClientProfiles(clientProfiles);
    } catch (error) {
        console.error('Error fetching client profiles data:', error);
    }
  }

  const brokerDropdownList = document.getElementById('brokerDropdownList');
  function populateBrokerOptions(brokers) {
    if (!brokers.length) {
      showError('step1-result', 'No brokers configured. Please configure a broker first.');
      return;
    }

    resources.brokers = brokers;
    brokers.forEach(broker => {
        const li = document.createElement('li');
        li.className = 'px-4 py-2 hover:bg-gray-100 cursor-pointer shadow hover:bg-gray-100 dark:bg-gray-800 dark:border-gray-700 dark:hover:bg-gray-700';
        li.innerHTML = `<div class="font-bold">${broker.name}</div>
                        <div class="text-sm text-gray-500">URL: ${broker.url}</div>
                        <div class="text-sm text-gray-500">Broker: ${broker.vpn}</div>
                        <div class="inline-flex justify-center text-base font-semibold text-gray-900 dark:text-white">` +
                        (broker.status ? 
                            `<div class="self-center h-2.5 w-2.5 rounded-full bg-green-400 mr-2"></div>` :
                            `<div class="self-center h-2.5 w-2.5 rounded-full bg-red-500 mr-2"></div>`) +
                        `<div class="text-sm font-normal text-gray-500 dark:text-gray-400">${new Date(broker.lastTested).toLocaleString()}></div>
                        <hr/>
                        </div>`;
        li.addEventListener('click', () => {
            localStorage.setItem('currentBroker', broker.name);
            resources.currentBroker = broker.name;
            document.getElementById('chosenbroker').setAttribute('value', broker.name);
            fetchClientProfiles();
            document.getElementById('choose-broker-modal-close').click();
        });
        brokerDropdownList.appendChild(li);
    });

    resources.currentBroker = localStorage.getItem('currentBroker') ? localStorage.getItem('currentBroker') : brokers[0].name;
    document.getElementById('chosenbroker').setAttribute('value', resources.currentBroker);
    fetchClientProfiles();
  }

  const clientProfilesTable = document.getElementById('client-profiles-table');
  function populateClientProfiles(clientProfiles) {
    if (!clientProfiles.length) 
      return;

    clientProfilesTable.innerHTML = '';
    resources.clientProfiles = clientProfiles;
    clientProfiles.forEach((clientProfile, i) => {
        const tr = document.createElement('tr');
        tr.className = 'hover:bg-gray-100 dark:hover:bg-gray-700';

        const tdClientProfileName = document.createElement('td');
        tdClientProfileName.className = 'p-4 break-words text-base font-medium text-gray-900 whitespace-nowrap dark:text-white';
        tdClientProfileName.innerHTML = clientProfile.clientProfileName;
        tr.appendChild(tdClientProfileName);

        const tdMsgVpnName = document.createElement('td');
        tdMsgVpnName.className = 'p-4 break-words text-base font-medium text-gray-900 whitespace-nowrap dark:text-white';
        tdMsgVpnName.innerHTML = clientProfile.msgVpnName;
        tr.appendChild(tdMsgVpnName);

        const tdGuaranteedMessages = document.createElement('td');
        tdGuaranteedMessages.className = 'p-4 text-sm font-normal text-gray-500 whitespace-nowrap dark:text-gray-400';
        tdGuaranteedMessages.innerHTML = `
                        <div class="inline-flex justify-center text-base font-semibold text-gray-900 dark:text-white flex-col items-start">                          
                            <div class="inline-flex justify-center text-base font-semibold text-gray-900 dark:text-white">
                                ${clientProfile.allowGuaranteedMsgReceiveEnabled ? 
                                    `<div class="self-center h-2.5 w-2.5 rounded-full bg-green-400 mr-2"></div>` :
                                    `<div class="self-center h-2.5 w-2.5 rounded-full bg-red-500 mr-2"></div>`}
                            <div class="text-sm font-normal text-gray-500 dark:text-gray-400">Allow Guranteed Messages Received</div>
                        </div>
                        <div class="inline-flex justify-center text-base font-semibold text-gray-900 dark:text-white flex-col items-start">                          
                            <div class="inline-flex justify-center text-base font-semibold text-gray-900 dark:text-white">
                                ${clientProfile.allowGuaranteedMsgSendEnabled ? 
                                    `<div class="self-center h-2.5 w-2.5 rounded-full bg-green-400 mr-2"></div>` :
                                    `<div class="self-center h-2.5 w-2.5 rounded-full bg-red-500 mr-2"></div>`}
                            <div class="text-sm font-normal text-gray-500 dark:text-gray-400">Allow Guranteed Messages Send</div>
                        </div>`;
        tr.appendChild(tdGuaranteedMessages);

        const tdActions = document.createElement('td');
        tdActions.className = 'p-4 space-x-2 whitespace-nowrap';
        tdActions.innerHTML = `
            <div id="tooltip-remove-clientprofile-${i}" role="tooltip" class="absolute z-10 invisible inline-block px-3 py-2 text-sm font-medium text-white bg-gray-900 rounded-lg shadow-sm opacity-0 tooltip dark:bg-gray-700">
              Delete Client Profile
              <div class="tooltip-arrow" data-popper-arrow></div>
            </div>
            <button data-tooltip-target="tooltip-remove-clientprofile-${i}" data-tooltip-placement="top" type="button" data-clientprofile='${JSON.stringify(clientProfile)}' data-drawer-target="drawer-remove-clientprofile-default" data-drawer-show="drawer-remove-clientprofile-default" aria-controls="drawer-remove-clientprofile-default" data-drawer-placement="right" class="removeClientProfileButton inline-flex items-center px-3 py-2 text-sm font-medium text-center text-white bg-red-700 rounded-lg hover:bg-red-800 focus:ring-4 focus:ring-red-300 dark:focus:ring-red-900">
              <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="20px" height="20px" viewBox="0 0 20 20" version="1.1">
                <path style=" stroke:#fff;fill-rule:nonzero;fill:#fff;fill-opacity:1;" d="M 0 10 C 0 11.359375 0.265625 12.652344 0.800781 13.878906 C 1.332031 15.105469 2.039062 16.171875 2.921875 17.078125 C 3.800781 17.988281 4.867188 18.699219 6.121094 19.21875 C 7.375 19.738281 8.667969 20 10 20 C 11.332031 20 12.625 19.738281 13.878906 19.21875 C 15.132812 18.699219 16.199219 17.988281 17.078125 17.078125 C 17.960938 16.171875 18.667969 15.105469 19.199219 13.878906 C 19.734375 12.652344 20 11.359375 20 10 C 20 8.640625 19.734375 7.347656 19.199219 6.121094 C 18.667969 4.894531 17.960938 3.828125 17.078125 2.921875 C 16.199219 2.011719 15.140625 1.308594 13.898438 0.800781 C 12.660156 0.292969 11.359375 0.0273438 10 0 C 8.640625 0 7.347656 0.265625 6.121094 0.800781 C 4.894531 1.332031 3.828125 2.039062 2.921875 2.921875 C 2.011719 3.800781 1.308594 4.867188 0.800781 6.121094 C 0.292969 7.375 0.0273438 8.667969 0 10 Z M 2.5 10 C 2.5 8.640625 2.832031 7.386719 3.5 6.238281 C 4.167969 5.09375 5.078125 4.1875 6.238281 3.519531 C 7.398438 2.851562 8.652344 2.511719 10 2.5 C 11.347656 2.488281 12.601562 2.828125 13.761719 3.519531 C 14.921875 4.214844 15.832031 5.121094 16.5 6.238281 C 17.167969 7.359375 17.5 8.613281 17.5 10 C 17.5 11.386719 17.167969 12.648438 16.5 13.78125 C 15.832031 14.914062 14.921875 15.820312 13.761719 16.5 C 12.601562 17.179688 11.347656 17.511719 10 17.5 C 8.652344 17.488281 7.398438 17.152344 6.238281 16.5 C 5.078125 15.847656 4.167969 14.941406 3.5 13.78125 C 2.832031 12.621094 2.5 11.359375 2.5 10 Z M 6.101562 12.660156 C 6.101562 13.007812 6.21875 13.300781 6.460938 13.539062 C 6.699219 13.78125 7 13.90625 7.359375 13.921875 C 7.71875 13.933594 8.011719 13.808594 8.238281 13.539062 L 10 11.78125 L 11.761719 13.539062 C 12 13.792969 12.292969 13.921875 12.640625 13.921875 C 12.988281 13.921875 13.285156 13.792969 13.539062 13.539062 C 13.792969 13.285156 13.914062 12.992188 13.898438 12.660156 C 13.886719 12.328125 13.765625 12.035156 13.539062 11.78125 L 11.761719 10 L 13.539062 8.238281 C 13.78125 8 13.898438 7.707031 13.898438 7.359375 C 13.898438 7.011719 13.78125 6.71875 13.539062 6.480469 C 13.300781 6.238281 13 6.113281 12.640625 6.101562 C 12.28125 6.085938 11.988281 6.214844 11.761719 6.480469 L 10 8.238281 L 8.238281 6.480469 C 8 6.226562 7.707031 6.101562 7.359375 6.101562 C 7.011719 6.101562 6.714844 6.226562 6.460938 6.480469 C 6.207031 6.734375 6.085938 7.027344 6.101562 7.359375 C 6.113281 7.691406 6.234375 7.988281 6.460938 8.238281 L 8.238281 10 L 6.460938 11.78125 C 6.21875 12.019531 6.101562 12.3125 6.101562 12.660156 Z M 6.101562 12.660156 "/>
              </svg>
                
              <!-- Remove -->
            </button>`;
        tr.appendChild(tdActions);
        clientProfilesTable.appendChild(tr);
    });

    const removeClientProfiles = document.getElementsByClassName("removeClientProfileButton");
    Array.from(removeClientProfiles).forEach(element => {
      element.addEventListener("click", function (e) {
        const cpStr = e.currentTarget.dataset.clientprofile;
        var clientprofile = JSON.parse(cpStr)
        document.getElementById('remove-clientprofile-data').innerText = cpStr;
        removeDrawer.show();
      });
    });
  }

  document.getElementById('refreshClientProfileButton').addEventListener('click', () => {
    fetchClientProfiles();
  });

  fetchBrokers();  

  document.addEventListener('DOMContentLoaded', function() {
    const clientprofileDeleteButton = document.getElementById("clientprofileDeleteButton");
    clientprofileDeleteButton.addEventListener("click", async function (e) {
      const clientprofileStr = document.getElementById("remove-clientprofile-data").innerText;
      const clientprofile = JSON.parse(clientprofileStr);
      const path = window.location.href.substring(0, window.location.href.lastIndexOf('/'));
      const response = await fetch(path + `/exec/clientprofile/delete?broker=${resources.currentBroker}&clientprofile=${clientprofile.clientProfileName}`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
      });

      if (response.status !== 200) {
        toastr.error(response.statusText)
      } else {
        toastr.success('Client Profile successfully deleted')
      }

      document.getElementById('choose-remove-clientprofile-modal-close').click();
      document.getElementById("refreshClientProfileButton").click();
    });

    const $targetEl = document.getElementById('drawer-remove-clientprofile-default');
    const options = {
      placement: 'right',
      backdrop: true,
      bodyScrolling: false,
      edge: false,
      edgeOffset: '',
      backdropClasses:
          'bg-gray-900/50 dark:bg-gray-900/80 fixed inset-0 z-30',
      onHide: () => {
          console.log('drawer is hidden');
      },
      onShow: () => {
          console.log('drawer is shown');
      },
      onToggle: () => {
          console.log('drawer has been toggled');
      },
    };

    removeDrawer = new Drawer($targetEl, options);
  });

  var removeDrawer = undefined;

  const hashCode = (str) => {
    var hash = 0,
    i, chr;
    if (str.length === 0) return hash;
    for (i = 0; i < str.length; i++) {
      chr = str.charCodeAt(i);
      hash = ((hash << 5) - hash) + chr;
      hash |= 0; // Convert to 32bit integer
    }
    return hash;
  };
</script>